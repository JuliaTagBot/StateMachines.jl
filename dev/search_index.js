var documenterSearchIndex = {"docs":
[{"location":"usage/#User-guide-1","page":"Usage","title":"User guide","text":"","category":"section"},{"location":"usage/#","page":"Usage","title":"Usage","text":"CurrentModule = StateMachines","category":"page"},{"location":"usage/#","page":"Usage","title":"Usage","text":"StateMachines.jl is not yet an registered package and is installed with","category":"page"},{"location":"usage/#","page":"Usage","title":"Usage","text":"pkg> add(\"https://github.com/pbayer/StateMachines.jl\")","category":"page"},{"location":"usage/#","page":"Usage","title":"Usage","text":"The package is then loaded with","category":"page"},{"location":"usage/#","page":"Usage","title":"Usage","text":"using StateMachines","category":"page"},{"location":"usage/#Application-1","page":"Usage","title":"Application","text":"","category":"section"},{"location":"examples/#Examples-1","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/#Programs-1","page":"Examples","title":"Programs","text":"","category":"section"},{"location":"examples/#","page":"Examples","title":"Examples","text":"are at https://github.com/pbayer/StateMachines.jl/tree/master/docs/examples","category":"page"},{"location":"examples/#Notebooks-1","page":"Examples","title":"Notebooks","text":"","category":"section"},{"location":"examples/#","page":"Examples","title":"Examples","text":"see https://github.com/pbayer/StateMachines.jl/tree/master/docs/notebooks","category":"page"},{"location":"overview/#A-framework-for-state-machines-in-Julia-1","page":"Overview","title":"A framework for state machines in Julia","text":"","category":"section"},{"location":"#StateMachines.jl-1","page":"Home","title":"StateMachines.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"StateMachines.jl provides a framework to describe, model and simulate communicating and queueing systems. Its components are processes or blocks of processes interacting via channels. Processes behave as state machines with defined transitions between their states. Through state actions processes can change their environment and communicate with other processes.","category":"page"},{"location":"#","page":"Home","title":"Home","text":"StateMachines.jl is implemented in Julia, but its framework follows loosely that of the system design language SDL [1].","category":"page"},{"location":"#Installation-1","page":"Home","title":"Installation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"StateMachines.jl is not yet an registered package and is installed with","category":"page"},{"location":"#","page":"Home","title":"Home","text":"pkg> add(\"https://github.com/pbayer/StateMachines.jl\")","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Author: Paul Bayer License: MIT","category":"page"},{"location":"#","page":"Home","title":"Home","text":"[1]: SDL is maintained by the SDL-Forum and published by the ITU (International Telecommunications Union)","category":"page"},{"location":"internals/#Internals-1","page":"Internals","title":"Internals","text":"","category":"section"}]
}
